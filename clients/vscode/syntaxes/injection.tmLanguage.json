{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "injection",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#subrutines"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns":
			[
				{
					"name": "keyword.control.injection",
					"match": "\\b(?i:if|else|then|while|for|next|to|step|return|repeat|until|wend|sub|end sub|endsub|end if|endif|dim|var|goto)\\b"
				},
				{
					"name": "keyword.operator.new.scp99",
					"match": "((\\+|\\-|\\*|\\/|=|<|>)|(\\b(?i:and|not|or)\\b))"
				},
				{
					"name": "constant.numeric.scp99",
					"match": "\\b([0-9])+\\b"
				}
			]
		},
		"subrutines": {
			"patterns":
			[
				{
					"name": "entity.name.class.injection",
					"match": "\\b(?i:UO)\\b"
				},
				{
					"name": "entity.name.function.injection",
					"match": "\\b(?i:wait|str|val|len|left|right|mid|now|getarraylength)\\b"
				},
				{
					"name": "entity.name.function.injection",
					"match": "\\b(?i:set|setglobal|getglobal|getx|gety|getz|getdistance|gethp|getmaxhp|getnotoriety|getinfo|getname|GetGraphic|GetDir|IsNpc|Exists|Getserial|GetQuantity|IsOnline|dead|Hidden|AddObject|FindType|FindCount|Ignore|IgnoreReset|Count|Click|UseObject|Attack|GetStatus|UseType|WaitTargetObject|WaitTargetSelf|WaitTargetLast|WaitTargetTile|Targeting|Grab|MoveItem|SetReceivingContainer|UnsetReceivingContainer|LClick|KeyPress|Press|Say|PlayWav|TextOpen|TextPrint|Msg|ServerPrint|Print|CharPrint|InJournal|InJournalBetweenTimes|DeleteJournal|Journal|JournalSerial|JournalColor|SetJournalLine|Arm|SetArm|Disarm|Unequip|Equip|ObjAtLayer|WarMode|UseSkill|Cast|Morph|Timer|Time|Date|Terminate|RandomPrivateGetTile|Snap)\\b"
				},
				{
					"name": "variable.name.injection",
					"match": "\\b(?i:str|int|dex|stamina|mana|weight|gold|life)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.injection",
			"begin": "(\"|')",
			"end": "(\"|')",
			"patterns": [
				{
					"name": "constant.character.escape.injection",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.sharp.injection",
				"match": "#.*"
			},
			{
				"name": "comment.line.semicolon.injection",
				"match": ";.*"
			}]
		}
	},
	"scopeName": "source.injection"
}